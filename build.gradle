// plugins
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

// project Name and description
group 'supermonk'
version '1.0-SNAPSHOT'

// compatibility version
sourceCompatibility = 1.8

// dependency graph
dependencies {

    // Map Love story
    implementation 'com.google.maps:google-maps-services:0.9.4'
    implementation 'org.slf4j:slf4j-simple:1.7.25'


    // GRPC Love story

    // https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.23.0'
    // https://mvnrepository.com/artifact/io.grpc/grpc-netty-shaded
    compile group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.23.0'
    // https://mvnrepository.com/artifact/io.grpc/grpc-stub
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.23.0'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.9.1'

    // Logging

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'


    testCompile group: 'junit', name: 'junit', version: '4.12'
}


// build script
repositories {
    mavenCentral()
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.9.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.23.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
